---
title: "FY24Q1 Review"
author: "Karishma Srikanth"
format: docx
editor: visual
---

Hello OHA,  

With COP season in full-swing, we know that you are all working above and beyond. Your time is valuable so, like last year, the program data review this quarter will be in the format of an email and will provide a succinct, focused summary of key new developments that have the potential to impact target setting and strategic discussions. For topics where Q1 data is available, the highlights focus on new findings most relevant for COP/ROP 23 Year 2 strategic directions. For topic areas that do not have new data available, the data highlights summarize the most significant findings from FY23, through the lens of COP/ROP 23 Year 2 preparation.

This email is neither comprehensive nor exhaustive, but is meant to supplement data exploration and synthesis that is already ongoing through our country and technical clusters. The themes and subtopics in the email are based on "selected directions" for COP/ROP planning agreed upon as part of the [COP/ROP pre-planning discussions](https://docs.google.com/presentation/d/1zxf7C7mTiVC_HUdk3uUDOJQNvfjeeRKe/edit#slide=id.p10) and are informed by the pillars of the [PEPFAR 5-year strategy](https://www.state.gov/pepfar-five-year-strategy-2022/). 

The goal of this snapshot is three-fold:  

-   Highlight this quarter's key successes and challenges, linking our Q1 performance with the ongoing COP/ROP 23 Year 2 negotiations and planning 

-   Consider how the Q1 data can guide, inform, and support our future priorities and vision

-   Set priority directions for COP/ROP 23 Year 2 through a data-informed lens by highlighting the most salient findings from FY23

```{r setup}
#| echo: TRUE
#| include: FALSE

  library(tidyverse)
  library(glitr)
  library(glamr)
  library(gophr)
  library(systemfonts)
  library(scales)
  library(tidytext)
  library(patchwork)
  library(ggtext)
  library(glue)
  library(janitor)
  library(lubridate)
  library(googlesheets4)
  library(mindthegap)

options(scipen=999)
```

```{r data}
#| echo: TRUE
#| include: FALSE

#Current MSD
filepath <- si_path() %>% 
  return_latest("MER_Structured_Datasets_OU_IM_FY22-24") 

# Grab metadata
metadata <- get_metadata(filepath) 

# MSD PREP --------------------------------------

#read MSD
df_msd <- read_psd(filepath)
```

```{r data_prep_functions}
#| echo: TRUE
#| include: FALSE

# eventually, have this be sourced
load_secrets()


#DREAMS PREP
# Google sheet ID for DREAMS DSNU list
  dsnu_g_id <- "1YaGWvpkiXVPiAwA3KyHwFtbZHrVeCz6DijWPCKpUN-Q"
  
  #MSD path
  dsnu_msd_path <- si_path() %>% 
    return_latest("PSNU_IM_DREAMS_FY22-24")
  
    #import DREAMS DSNU crosswalk
    #recommend adding psnu_uids to this sheet
 dsnu_list <- read_sheet(dsnu_g_id, sheet = "CURRENT (FY23/COP22)")

#rename names
names(dsnu_list)<-c("operatingunit", "psnu", "dsnu", "agencies_FY23")

#import msd and filter to current year
df_msd_dreams <- read_psd(dsnu_msd_path) %>% 
  filter(fiscal_year == metadata$curr_fy)

msd_dsnu_xwalk <- df_msd_dreams %>% 
  count(operatingunit, operatingunituid, psnu, psnuuid, cop22_psnu, cop22_psnuuid, dsnu, dsnuuid) %>% 
  mutate(raised_lvl = ifelse(psnuuid != cop22_psnuuid, TRUE, FALSE)) %>% 
  mutate(dsnu_new = case_when(operatingunit != "Uganda" & raised_lvl == TRUE ~ cop22_psnu,
                          TRUE ~ dsnu),
         dsnuuid_new = case_when(operatingunit != "Uganda" & raised_lvl == TRUE ~ cop22_psnuuid,
                          TRUE ~ dsnuuid))

#join the new xwalk back to msd and then join the internal dsnu list to the msd
df_dreams_all <- df_msd_dreams %>% 
  left_join(msd_dsnu_xwalk) %>% 
  left_join(dsnu_list, by=c("operatingunit", "cop22_psnu" = "psnu", "dsnu_new"= "dsnu"))

#LOCAL PARTNER PREP
#Read in the google sheet hyperfile with local partner
sheet_id <- "1MQviknJkJDttGdNEJeNaYPKmHCw6BqPuJ0C5cslV5IE"

df_partner <- read_sheet(sheet_id, sheet = "MechID-PartnerType", range = "A:B") %>% 
  clean_names() %>% 
  rename(mech_code = mechanism_id) %>% 
  mutate(mech_code = as.character(mech_code),
         partner_type = case_when(partner_type == "Regional" ~ "Local",
                                  partner_type == "TBD Local" ~ "Local", TRUE ~ partner_type))

#FUNCTIONS----------------------------------------------------------------------

#clean number function
clean_number <- function(x, digits = 0){
  dplyr::case_when(x >= 1e9 ~ glue("{round(x/1e9, digits)} billion"),
                   x >= 1e6 ~ glue("{round(x/1e6, digits)} million"),
                   x >= 1e3 ~ glue("{round(x/1e3, digits)} thousand"),
                   #x <= 1e3 ~ glue("{round(x/1e3, digits)} thousand"),
                   TRUE ~ glue("{x}"))
}


grab_qtr_totalnum <- function(df, indic) {
 val <-  df %>%
    filter(funding_agency == "USAID",
           standardizeddisaggregate %in% c("Total Numerator"),
           indicator %in% c(indic),
           fiscal_year == metadata$curr_fy) %>%
    group_by(funding_agency, indicator, fiscal_year) %>% 
    summarise(across(starts_with("qtr"), sum, na.rm = T), .groups = "drop") %>%
    ungroup() %>% 
    reshape_msd() %>%
    filter(period == metadata$curr_pd) %>% 
   # mutate(value= comma(value)) %>% 
    pull(value)
 
return(val)
}


grab_result_disagg <- function(df, indic, pop = NULL) {
  
  df_filter <- df %>%
    filter(funding_agency == "USAID",
           #standardizeddisaggregate %in% c("Age/Sex"),
           indicator %in% c(indic),
           fiscal_year == metadata$curr_fy,
           use_for_age == "Y"
    )
  
  if (pop == "AGYW") {
    
    df_filter <- df_filter %>% 
      filter(sex == "Female",
              target_age_2024 %in% c("15-24"))
    
  } else if (pop == "Peds") {
    
    df_filter <- df_filter %>% 
      filter(target_age_2024 %in% c("01-09", "10-14"))
  } else if (pop == "Youth") {
     df_filter <- df_filter %>% 
      filter(age_2019 %in% c("01-04", "05-09","10-14", "15-19", "20-24", "25-29"))
  } else if (pop == "All") {
    df_filter
  }
  
  df_final <- df_filter %>% 
    summarise(across(matches("targets|cumulative"), sum, na.rm = T)) %>% 
    ungroup() %>% 
    mutate(achv  = percent(cumulative/targets))
  
  return(df_final)
  
}

#LP Function
#result_type = value or share
grab_lp_results_clean <- function(indic, result_type) {
  
  df_munge <- suppressMessages(df_msd %>% 
                                 # bind_rows(df_arch) %>%
                                 left_join(df_partner, by = c("mech_code")) %>%
                                 filter(funding_agency == "USAID",
                                        indicator == indic,
                                        standardizeddisaggregate == "Total Numerator") %>% 
                                 group_by(funding_agency, fiscal_year, indicator, partner_type) %>% 
                                 summarise(across(cumulative, sum, na.rm = TRUE)) %>%
                                 ungroup() %>% 
                                 filter(partner_type != "TBD") %>%
                                 #filter(fiscal_year != 2022) %>%
                                 pivot_wider(names_from = partner_type, values_from = cumulative) %>%
                                 group_by(fiscal_year) %>%
                                 mutate(Total = International + Local,
                                        share = Local / Total)  %>%
                                 pivot_longer(cols = International:Total, names_to = "partner_type"))
  
  title_info_lp <- df_munge %>% 
    filter(partner_type == "Local", fiscal_year == metadata$curr_fy) %>% 
    select(fiscal_year, indicator, value, share) %>% 
    mutate(
      value = value %>% clean_number(1),#change to 1 if you want 1 decimal accuracy
      share = percent(round(share, 2))) %>% 
    pull(result_type)
  
  return(title_info_lp)
}

grab_lp_results <- function(indic, result_type) {
  
  df_munge <- suppressMessages(df_msd %>% 
                                 # bind_rows(df_arch) %>%
                                 left_join(df_partner, by = c("mech_code")) %>%
                                 filter(funding_agency == "USAID",
                                        indicator == indic,
                                        standardizeddisaggregate == "Total Numerator") %>% 
                                 group_by(funding_agency, fiscal_year, indicator, partner_type) %>% 
                                 summarise(across(cumulative, sum, na.rm = TRUE)) %>%
                                 ungroup() %>% 
                                 filter(partner_type != "TBD") %>%
                                 #filter(fiscal_year != 2022) %>%
                                 pivot_wider(names_from = partner_type, values_from = cumulative) %>%
                                 group_by(fiscal_year) %>%
                                 mutate(Total = International + Local,
                                        share = Local / Total)  %>%
                                 pivot_longer(cols = International:Total, names_to = "partner_type"))
  
  title_info_lp <- df_munge %>% 
    filter(partner_type == "Local", fiscal_year == metadata$curr_fy) %>% 
    select(fiscal_year, indicator, value, share) %>% 
    mutate(
      value = value,#change to 1 if you want 1 decimal accuracy
      share = percent(round(share, 2))) %>% 
    pull(result_type) %>%
  
  return(title_info_lp)
}


#key pops function clean
pull_kp <- function(df, indic, val_type, clean = FALSE) {
  # Ensure val_type is either "cumulative" or "targets"
  if(!val_type %in% c("cumulative", "targets")) {
    stop("val_type must be either 'cumulative' or 'targets'")
  }
  
  # Dynamically set the weight based on val_type
  wt_column <- ifelse(val_type == "cumulative", "cumulative", "targets")
  
  kp_val <- df %>%
    filter(funding_agency == "USAID",
           str_detect(standardizeddisaggregate, "KeyPop(?!\\/Status)"),
           fiscal_year == metadata$curr_fy) %>%
    count(indicator, wt = .data[[wt_column]]) # Use dynamic weight
  
  if (clean == TRUE) {
    kp_val <- kp_val %>% 
      mutate(n = clean_number(n, 1)) %>% 
      pivot_wider(names_from = indicator, values_from = n) %>% 
      pull(indic)
  } else {
    kp_val <- kp_val %>% 
      pivot_wider(names_from = indicator, values_from = n) %>% 
      pull(indic)
  }
  
  return(kp_val)
}

```

### **STAYING THE COURSE ACROSS THE CASCADE (PREVENTION, TESTING, TREATMENT)**

In Q1, USAID had strong performance across prevention, care and treatment programs that are pivotal to achieving epidemic control across our OUs. HTS achievement and treatment growth were strong, with several additional countries hitting the goal of 95% viral suppression. Despite these strong results, interruptions in treatment have increased across PEPFAR and must be addressed. One potential solution is increased use of MMD, and for the first time this quarter **USAID globally had more clients on 6MMD than 3MMD.** Pediatric treatment, including access to MMD and VLC, continued to be a challenge. Status neutral testing, an opportunity to engage and retain people in services regardless of if they need treatment or prevention, led to testing for VMMC, ANC, and PrEP. PrEP and VMMC both had historic global target achievements, with many OUs on track to meet their annual targets.

```{r prep}
#| echo: TRUE
#| include: FALSE

prep_val <- df_msd %>%
    filter(funding_agency == "USAID",
           standardizeddisaggregate %in% c("Total Numerator"),
           indicator %in% c("PrEP_NEW"),
           fiscal_year == metadata$curr_fy) %>%
    group_by(funding_agency, indicator, fiscal_year) %>% 
    summarise(across(starts_with("qtr"), sum, na.rm = T)) %>%
    ungroup() %>% 
    reshape_msd() %>%
    filter(period == metadata$curr_pd) %>% 
    mutate(value= comma(value)) %>% 
    pull(value)

prep_val <- grab_qtr_totalnum(df_msd, "PrEP_NEW")

prep_achv <- df_msd %>%
    filter(funding_agency == "USAID",
           standardizeddisaggregate %in% c("Total Numerator"),
           indicator %in% c("PrEP_NEW"),
           fiscal_year == metadata$curr_fy) %>%
    group_by(funding_agency, indicator, fiscal_year) %>% 
    summarise(across(matches("targets|cumulative"), sum, na.rm = T)) %>% 
    ungroup() %>% 
    mutate(achv  = percent(cumulative/targets)) %>% 
  pull(achv)

prep_cntry_achv <- df_msd %>%
  filter(funding_agency == "USAID",
         standardizeddisaggregate %in% c("Total Numerator"),
         indicator %in% c("PrEP_NEW"),
         fiscal_year == metadata$curr_fy) %>%
  group_by(funding_agency, country, indicator, fiscal_year) %>% 
  summarise(across(matches("targets|cumulative"), sum, na.rm = T), .groups = "drop") %>% 
  ungroup() %>% 
  mutate(achv  = cumulative/targets) %>% 
  arrange(desc(achv)) %>% 
  mutate(over20_pct = ifelse(achv >= .2, TRUE, FALSE)) %>% 
  count(over20_pct) %>% 
  mutate(total = sum(n),
         country_achv = glue("{n}/{total}")) %>% 
  filter(over20_pct == TRUE) %>% 
  pull(country_achv)

prep_agyw <- df_msd %>%
  filter(funding_agency == "USAID",
         standardizeddisaggregate %in% c("Age/Sex"),
         indicator %in% c("PrEP_NEW"),
         fiscal_year == metadata$curr_fy,
         sex == "Female",
         target_age_2024 %in% c("15-24")
  ) %>% 
  summarise(across(matches("targets|cumulative"), sum, na.rm = T)) %>% 
  ungroup() %>% 
  mutate(achv  = percent(cumulative/targets))

prep_agyw_val <- prep_agyw %>% pull(cumulative)
prep_agyw_achv <- prep_agyw %>% pull(achv)

# lp_prep_val <- grab_lp_results("PrEP_NEW", "value") 
# lp_prep_share <- grab_lp_results("PrEP_NEW", "share")

#kp
kp_prep_val <- pull_kp(df = df_msd, indic = "PrEP_NEW", val_type = "cumulative", FALSE)
kp_prep_targ <- pull_kp(df = df_msd, indic = "PrEP_NEW", val_type = "targets", FALSE) 

kp_prep_achv <- kp_prep_val / kp_prep_targ

```

-   **PrEP:** USAID supported `r comma(prep_val)` to initiate PrEP in `r metadata$curr_pd` **reaching `r prep_achv`of our annual PrEP_NEW target,** with `r prep_cntry_achv` countries achieving 20% or greater of PrEP_NEW as of `r metadata$curr_pd`. USAID continues to reach key and priority populations with PrEP, initiating `r comma(kp_prep_val)` key populations on PrEP (`r percent(kp_prep_achv, 1)` PrEP_NEW achievement), and initiating `r comma(prep_agyw_val)` AGYW on PrEP (`r prep_agyw_achv` PrEP_NEW achievement). PEPFAR supports the UNAIDS goal of having 10 million people on PrEP globally by 2025.

```{r hts}
#| echo: TRUE
#| include: FALSE

hts_val <- grab_qtr_totalnum(df_msd, "HTS_TST")
htspos_val <- grab_qtr_totalnum(df_msd, "HTS_TST_POS")
tx_new_val <- grab_qtr_totalnum(df_msd, "TX_NEW")

hts_pos_kp_val <- pull_kp(df = df_msd, indic = "HTS_TST_POS", val_type = "cumulative", FALSE)

hts_pos_peds_val <- grab_result_disagg(df_msd, "HTS_TST_POS", pop = "Peds") %>% pull(cumulative)
hts_pos_agyw_val <- grab_result_disagg(df_msd, "HTS_TST_POS", pop = "AGYW") %>% pull(cumulative)

hts_mod <- df_msd %>%
 # resolve_knownissues() %>% 
  filter(funding_agency == "USAID",
         indicator== "HTS_TST",
         standardizeddisaggregate == "Modality/Age/Sex/Result",
         #target_modality_2024 == c("VMMC", "PMTCT ANC", "Post ANC1"),
         fiscal_year == metadata$curr_fy) %>%
  group_by(indicator, funding_agency, fiscal_year, target_modality_2024) %>% 
  summarise(across(matches("qtr"), sum, na.rm = T), .groups = "drop") %>% 
  #ungroup() %>% 
  filter(target_modality_2024 %in% c("VMMC", "PMTCT ANC", "Post ANC1")) %>% 
  reshape_msd() %>% 
  pivot_wider(names_from = "target_modality_2024") %>% 
  mutate(ANC = `PMTCT ANC` + `Post ANC1`)

hts_mod_vmmc <- hts_mod %>% pull(VMMC)
hts_mod_anc <- hts_mod %>% pull(ANC)

```

-   **Testing:** In FY24Q1, USAID provided **`r comma(hts_val)` HIV tests**, enabling **`r comma(htspos_val)` people to learn of their HIV positive status**, with `r comma(tx_new_val)` PLHIV new on treatment. Of those identified seropositive, `r comma(hts_pos_peds_val)` were children (01-14), `r comma(hts_pos_agyw_val)` were AGYW (10-24) and `r comma(hts_pos_kp_val)` identified as Key Populations. Status neutral testing also led to `r comma(hts_mod_vmmc)` tests through VMMC and `r comma(hts_mod_anc)` ANC tests.

```{r hts_self}
#| echo: TRUE
#| include: FALSE

hts_self_val <- grab_result_disagg(df_msd, "HTS_SELF", pop = "All") %>% pull(cumulative)
hts_self_achv <- grab_result_disagg(df_msd, "HTS_SELF", pop = "All") %>% pull(achv)

```

-   **Self-Testing: USAID achieved `r hts_self_achv` of its global HTS_SELF target,** which represents `r comma(hts_self_val)` self test kits that were distributed to allow individuals to test where, when and with whom they want.

```{r tx}
#| echo: TRUE
#| include: FALSE

tx_nn_val <- grab_result_disagg(df_msd, "TX_NET_NEW", pop = "All") %>% pull(cumulative)

tx_curr_val <- grab_result_disagg(df_msd, "TX_CURR", pop = "All") %>% pull(cumulative)

tx_curr_youth_val <- grab_result_disagg(df_msd, "TX_CURR", pop = "Youth") %>% pull(cumulative)


#limt to relevant indicators
df_nn <- df_msd %>% 
  filter(indicator %in% c("TX_CURR", "TX_NET_NEW"),
         funding_agency == "USAID",
         fiscal_year %in% c(2023, 2024)) %>% 
  group_by(operatingunit, indicator, fiscal_year) %>% 
  summarise(across(starts_with("qtr"), sum, na.rm = TRUE),
            .groups = "drop") %>% 
  reshape_msd(include_type = FALSE) %>%
  filter(value != 0)

#growth rate by OU
 df_nn %>% 
  pivot_wider(names_from = indicator) %>% 
 # mutate(positivity = HTS_TST_POS / HTS_TST) %>% 
  group_by(operatingunit) %>% 
  mutate(tx_gr = TX_NET_NEW / lag(TX_CURR, n = 1, order_by = period)) %>% 
  ungroup() %>% 
  filter(str_detect(period, "FY(24)")) %>% 
  group_by(operatingunit) %>%
  dplyr::mutate(tx_gr_rel_baseline = TX_CURR/TX_CURR[period == min(period)]) %>% 
  ungroup() %>% 
  arrange(desc(tx_gr)) %>%
  mutate(tx_gr_pct = percent(tx_gr))

```

-   **Treatment:** USAID's **HIV treatment cohort fell by `r comma(tx_nn_val)` during `r metadata$curr_pd` to almost `r clean_number(tx_curr_val, 1)` people, including nearly `r clean_number(tx_curr_youth_val, 1)` children and youth (0-29 years)**. Growth in *Nigeria, Mozambique, and Tanzania* was particularly notable at over 10%. Most countries continued to enroll clients on ART at similar paces, however the TX_CURR cohort fell in *South Africa (-0.4% ↓), Zambia (-4.6↓ ) and Kenya (-0.5% ↓).* While all three OUs have a reduction in targets in FY23, there were increases in IIT in all three.

-   **Interruptions in Treatment: TX_ML_IIT have increased  across PEPFAR, with USAID reaching 2.9% in IIT.** The substantial number ofPLHIV on ART for over six months make up the greater proportion of TX_CURR who experience an interruption at any given quarter. Continued attention on interventions to reduce IIT will be critical during COP23. 

-   **MMD** (not including South Africa): USAID increased 3+MMD coverage from 83% in Q4 to 84% in Q1 and 6MMD coverage from 41% to 44% in the same period. **There are now more clients on 6MMD (2.27M) than 3-5MMD (2.01M).** Pediatric 3+MMD also increased from 66% in Q4 to 68% in Q1. USAID continues to be a leader in MMD, maintaining the highest rates of MMD coverage across all agencies. **Kenya** made substantial gains in 6MMD rollout increasing 6MMD coverage from 11% in Q4 to 17% in Q1 after years of policy and supply challenges. Conversely, Kenya's pediatric 3+MMD coverage dropped rather precipitously from 42% in Q4 to 33% in Q1. 

-   **Viral Load Suppression:** USAID's PLHIV cohort on treatment who are virally suppressed has increased globally from 93% in FY21 to 95% at the end of FY22Q1. Twenty-one countries maintained or achieved 3rd 95 goals (up from 15 in Q4), however **3 countries remain below 90% VLS** (Haiti, South Sudan, and the DR); additionally, **VLC and VLS for children \<15 are only 81% and 86%, and only 69% and 80% for children \<5.** Importantly, we are seeing strong improvements in VLS for children in countries where pDTG uptake has been higher.  Countries are encouraged to budget and plan for use of DBS and POC technologies to ensure access to timely viral load monitoring, particularly for children, pregnant women, and other vulnerable and/or hard to reach populations.

-   **Viral Load Coverage:** In FY23Q1, **viral load coverage (VLC) remained above 90% in 8 countries and increased globally to 80%.** Leveraging community programs is vital to eliminate this disparity and ensure VL testing is accessible outside facilities. 

-   **TB/HIV:** USAID achieved 27% of its TB_STAT target in Q1, maintaining  **high performance for the percentage of TB cases that know their HIV Status (% coverage TB_STAT)** with 96%. OUs and partners have to improve performance in the pediatrics age bands \<1-04 where the TB_STAT coverage is the lowest (68-88%), by intensifying HIV testing in infants and toddlers using rapid POC testing in DOTS, pediatric and MCH clinics. The highest percentage of TB/HIV co-infection is in the 45-49 age band for both females and males; OUs should tailor services accordingly to manage the TB/HIV co-infection.

-   **VMMC: USAID VMMC programs achieved 23% against an annual target of 667,681 in Q1**. Given a historically slow first quarter due to seasonality and holidays, this was a great start for the FY and comparable to CDC (25%) and DOD (30%). Several countries are using their most recent PHIA data to update VMMC coverage estimates and gap analysis towards achieving 90% MC coverage; this will inform COP23 planning and beyond. 

\

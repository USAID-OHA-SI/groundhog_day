---
title: "FY24Q1 Review"
author: "Karishma Srikanth"
format: docx
editor: visual
---

Hello OHA,  

With COP season in full-swing, we know that you are all working above and beyond. Your time is valuable so, like last year, the program data review this quarter will be in the format of an email and will provide a succinct, focused summary of key new developments that have the potential to impact target setting and strategic discussions. For topics where Q1 data is available, the highlights focus on new findings most relevant for COP/ROP 23 Year 2 strategic directions. For topic areas that do not have new data available, the data highlights summarize the most significant findings from FY23, through the lens of COP/ROP 23 Year 2 preparation.

This email is neither comprehensive nor exhaustive, but is meant to supplement data exploration and synthesis that is already ongoing through our country and technical clusters. The themes and subtopics in the email are based on "selected directions" for COP/ROP planning agreed upon as part of the [COP/ROP pre-planning discussions](https://docs.google.com/presentation/d/1zxf7C7mTiVC_HUdk3uUDOJQNvfjeeRKe/edit#slide=id.p10) and are informed by the pillars of the [PEPFAR 5-year strategy](https://www.state.gov/pepfar-five-year-strategy-2022/). 

The goal of this snapshot is three-fold:  

-   Highlight this quarter's key successes and challenges, linking our Q1 performance with the ongoing COP/ROP 23 Year 2 negotiations and planning 

-   Consider how the Q1 data can guide, inform, and support our future priorities and vision

-   Set priority directions for COP/ROP 23 Year 2 through a data-informed lens by highlighting the most salient findings from FY23

```{r setup}
#| echo: TRUE
#| include: FALSE

  library(tidyverse)
  library(glitr)
  library(glamr)
  library(gophr)
  library(systemfonts)
  library(scales)
  library(tidytext)
  library(patchwork)
  library(ggtext)
  library(glue)
  library(janitor)
  library(lubridate)
  library(googlesheets4)
  library(mindthegap)

options(scipen=999)
```

```{r data}
#| echo: TRUE
#| include: FALSE

#Current MSD
filepath <- si_path() %>% 
  return_latest("MER_Structured_Datasets_OU_IM_FY22-24")

# Grab metadata
get_metadata(filepath) 

# MSD PREP --------------------------------------

#read MSD
df_msd <- read_psd(filepath)
```

```{r data_prep_functions}
#| echo: TRUE
#| include: FALSE

# eventually, have this be sourced
load_secrets()


#DREAMS PREP
# Google sheet ID for DREAMS DSNU list
  dsnu_g_id <- "1YaGWvpkiXVPiAwA3KyHwFtbZHrVeCz6DijWPCKpUN-Q"
  
  #MSD path
  dsnu_msd_path <- si_path() %>% 
    return_latest("PSNU_IM_DREAMS_FY22-24")
  
    #import DREAMS DSNU crosswalk
    #recommend adding psnu_uids to this sheet
 dsnu_list <- read_sheet(dsnu_g_id, sheet = "CURRENT (FY23/COP22)")

#rename names
names(dsnu_list)<-c("operatingunit", "psnu", "dsnu", "agencies_FY23")

#import msd and filter to current year
df_msd_dreams <- read_psd(dsnu_msd_path) %>% 
  filter(fiscal_year == metadata$curr_fy)

msd_dsnu_xwalk <- df_msd_dreams %>% 
  count(operatingunit, operatingunituid, psnu, psnuuid, cop22_psnu, cop22_psnuuid, dsnu, dsnuuid) %>% 
  mutate(raised_lvl = ifelse(psnuuid != cop22_psnuuid, TRUE, FALSE)) %>% 
  mutate(dsnu_new = case_when(operatingunit != "Uganda" & raised_lvl == TRUE ~ cop22_psnu,
                          TRUE ~ dsnu),
         dsnuuid_new = case_when(operatingunit != "Uganda" & raised_lvl == TRUE ~ cop22_psnuuid,
                          TRUE ~ dsnuuid))

#join the new xwalk back to msd and then join the internal dsnu list to the msd
df_dreams_all <- df_msd_dreams %>% 
  left_join(msd_dsnu_xwalk) %>% 
  left_join(dsnu_list, by=c("operatingunit", "cop22_psnu" = "psnu", "dsnu_new"= "dsnu"))

#LOCAL PARTNER PREP
#Read in the google sheet hyperfile with local partner
sheet_id <- "1MQviknJkJDttGdNEJeNaYPKmHCw6BqPuJ0C5cslV5IE"

df_partner <- read_sheet(sheet_id, sheet = "MechID-PartnerType", range = "A:B") %>% 
  clean_names() %>% 
  rename(mech_code = mechanism_id) %>% 
  mutate(mech_code = as.character(mech_code),
         partner_type = case_when(partner_type == "Regional" ~ "Local",
                                  partner_type == "TBD Local" ~ "Local", TRUE ~ partner_type))

#FUNCTIONS----------------------------------------------------------------------

#clean number function
clean_number <- function(x, digits = 0){
  dplyr::case_when(x >= 1e9 ~ glue("{round(x/1e9, digits)} billion"),
                   x >= 1e6 ~ glue("{round(x/1e6, digits)} million"),
                   x >= 1e3 ~ glue("{round(x/1e3, digits)} thousand"),
                   TRUE ~ glue("{x}"))
}

#LP Function
#result_type = value or share
grab_lp_results_clean <- function(indic, result_type) {
  
  df_munge <- suppressMessages(df_msd %>% 
                                 # bind_rows(df_arch) %>%
                                 left_join(df_partner, by = c("mech_code")) %>%
                                 filter(funding_agency == "USAID",
                                        indicator == indic,
                                        standardizeddisaggregate == "Total Numerator") %>% 
                                 group_by(funding_agency, fiscal_year, indicator, partner_type) %>% 
                                 summarise(across(cumulative, sum, na.rm = TRUE)) %>%
                                 ungroup() %>% 
                                 filter(partner_type != "TBD") %>%
                                 #filter(fiscal_year != 2022) %>%
                                 pivot_wider(names_from = partner_type, values_from = cumulative) %>%
                                 group_by(fiscal_year) %>%
                                 mutate(Total = International + Local,
                                        share = Local / Total)  %>%
                                 pivot_longer(cols = International:Total, names_to = "partner_type"))
  
  title_info_lp <- df_munge %>% 
    filter(partner_type == "Local", fiscal_year == metadata$curr_fy) %>% 
    select(fiscal_year, indicator, value, share) %>% 
    mutate(
      value = value %>% clean_number(1),#change to 1 if you want 1 decimal accuracy
      share = percent(round(share, 2))) %>% 
    pull(result_type)
  
  return(title_info_lp)
}

grab_lp_results <- function(indic, result_type) {
  
  df_munge <- suppressMessages(df_msd %>% 
                                 # bind_rows(df_arch) %>%
                                 left_join(df_partner, by = c("mech_code")) %>%
                                 filter(funding_agency == "USAID",
                                        indicator == indic,
                                        standardizeddisaggregate == "Total Numerator") %>% 
                                 group_by(funding_agency, fiscal_year, indicator, partner_type) %>% 
                                 summarise(across(cumulative, sum, na.rm = TRUE)) %>%
                                 ungroup() %>% 
                                 filter(partner_type != "TBD") %>%
                                 #filter(fiscal_year != 2022) %>%
                                 pivot_wider(names_from = partner_type, values_from = cumulative) %>%
                                 group_by(fiscal_year) %>%
                                 mutate(Total = International + Local,
                                        share = Local / Total)  %>%
                                 pivot_longer(cols = International:Total, names_to = "partner_type"))
  
  title_info_lp <- df_munge %>% 
    filter(partner_type == "Local", fiscal_year == metadata$curr_fy) %>% 
    select(fiscal_year, indicator, value, share) %>% 
    mutate(
      value = value,#change to 1 if you want 1 decimal accuracy
      share = percent(round(share, 2))) %>% 
    pull(result_type) %>%
  
  return(title_info_lp)
}


#key pops function clean
pull_kp <- function(df, indic, val_type, clean = FALSE) {
  # Ensure val_type is either "cumulative" or "targets"
  if(!val_type %in% c("cumulative", "targets")) {
    stop("val_type must be either 'cumulative' or 'targets'")
  }
  
  # Dynamically set the weight based on val_type
  wt_column <- ifelse(val_type == "cumulative", "cumulative", "targets")
  
  kp_val <- df %>%
    filter(funding_agency == "USAID",
           str_detect(standardizeddisaggregate, "KeyPop(?!\\/Status)"),
           indicator %in% c("PrEP_NEW", "TX_CURR", "KP_PREV"),
           fiscal_year == metadata$curr_fy) %>%
    count(indicator, wt = .data[[wt_column]]) # Use dynamic weight
  
  if (clean == TRUE) {
    kp_val <- kp_val %>% 
      mutate(n = clean_number(n, 1)) %>% 
      pivot_wider(names_from = indicator, values_from = n) %>% 
      pull(indic)
  } else {
    kp_val <- kp_val %>% 
      pivot_wider(names_from = indicator, values_from = n) %>% 
      pull(indic)
  }
  
  return(kp_val)
}

```

**\
**

**STAYING THE COURSE ACROSS THE CASCADE (PREVENTION, TESTING, TREATMENT)**

In Q1, USAID had strong performance across prevention, care and treatment programs that are pivotal to achieving epidemic control across our OUs. HTS achievement and treatment growth were strong, with several additional countries hitting the goal of 95% viral suppression. Despite these strong results, interruptions in treatment have increased across PEPFAR and must be addressed. One potential solution is increased use of MMD, and for the first time this quarter **USAID globally had more clients on 6MMD than 3MMD.** Pediatric treatment, including access to MMD and VLC, continued to be a challenge. Status neutral testing, an opportunity to engage and retain people in services regardless of if they need treatment or prevention, led to testing for VMMC, ANC, and PrEP. PrEP and VMMC both had historic global target achievements, with many OUs on track to meet their annual targets.

```{r prep}
#| echo: TRUE
#| include: FALSE

prep_val <- df_msd %>%
    filter(funding_agency == "USAID",
           standardizeddisaggregate %in% c("Total Numerator"),
           indicator %in% c("PrEP_NEW"),
           fiscal_year == metadata$curr_fy) %>%
    group_by(funding_agency, indicator, fiscal_year) %>% 
    summarise(across(starts_with("qtr"), sum, na.rm = T)) %>%
    ungroup() %>% 
    reshape_msd() %>%
    filter(period == metadata$curr_pd) %>% 
    mutate(value= comma(value)) %>% 
    pull(value)

prep_achv <- df_msd %>%
    filter(funding_agency == "USAID",
           standardizeddisaggregate %in% c("Total Numerator"),
           indicator %in% c("PrEP_NEW"),
           fiscal_year == metadata$curr_fy) %>%
    group_by(funding_agency, indicator, fiscal_year) %>% 
    summarise(across(matches("targets|cumulative"), sum, na.rm = T)) %>% 
    ungroup() %>% 
    mutate(achv  = percent(cumulative/targets)) %>% 
  pull(achv)

prep_cntry_achv <- df_msd %>%
  filter(funding_agency == "USAID",
         standardizeddisaggregate %in% c("Total Numerator"),
         indicator %in% c("PrEP_NEW"),
         fiscal_year == metadata$curr_fy) %>%
  group_by(funding_agency, country, indicator, fiscal_year) %>% 
  summarise(across(matches("targets|cumulative"), sum, na.rm = T), .groups = "drop") %>% 
  ungroup() %>% 
  mutate(achv  = cumulative/targets) %>% 
  arrange(desc(achv)) %>% 
  mutate(over20_pct = ifelse(achv >= .2, TRUE, FALSE)) %>% 
  count(over20_pct) %>% 
  mutate(total = sum(n),
         country_achv = glue("{n}/{total}")) %>% 
  filter(over20_pct == TRUE) %>% 
  pull(country_achv)

prep_agyw <- df_msd %>%
  filter(funding_agency == "USAID",
         standardizeddisaggregate %in% c("Age/Sex"),
         indicator %in% c("PrEP_NEW"),
         fiscal_year == metadata$curr_fy,
         sex == "Female",
         target_age_2024 %in% c("15-24")
  ) %>% 
  summarise(across(matches("targets|cumulative"), sum, na.rm = T)) %>% 
  ungroup() %>% 
  mutate(achv  = percent(cumulative/targets))

prep_agyw_val <- prep_agyw %>% pull(cumulative)
prep_agyw_achv <- prep_agyw %>% pull(achv)

# lp_prep_val <- grab_lp_results("PrEP_NEW", "value") 
# lp_prep_share <- grab_lp_results("PrEP_NEW", "share")

#kp
kp_prep_val <- pull_kp(df = df_msd, indic = "PrEP_NEW", val_type = "cumulative", FALSE)
kp_prep_targ <- pull_kp(df = df_msd, indic = "PrEP_NEW", val_type = "targets", FALSE) 

kp_prep_achv <- kp_prep_val / kp_prep_targ

```

-   **PrEP:** USAID supported `r prep_val` to initiate PrEP in `r metadata$curr_pd` **reaching `r prep_achv`of our annual PrEP_NEW target,** with `r prep_cntry_achv` countries achieving 20% or greater of PrEP_NEW as of `r metadata$curr_pd`. USAID continues to reach key and priority populations with PrEP, initiating `r comma(kp_prep_val)` key populations on PrEP (`r percent(kp_prep_achv, 1)` PrEP_NEW achievement), and initiating `r comma(prep_agyw_val)` AGYW on PrEP (`r prep_agyw_achv` PrEP_NEW achievement). PEPFAR supports the UNAIDS goal of having 10 million people on PrEP globally by 2025.
